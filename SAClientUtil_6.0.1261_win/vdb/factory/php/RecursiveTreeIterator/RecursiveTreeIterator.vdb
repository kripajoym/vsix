<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<LanguageDependentDB>
  <Header language="php" version="3.0.0">
    <description># # Ounce Labs Confidential # # Copyright (c) 2003, 2004 Ounce Labs, Inc. All-Rights Reserved. # # &lt;a href="http://www.ouncelabs.com"&gt;Ounce Labs&lt;/a&gt; # # This software and documentation constitute an unpublished work and contains # valuable trade secrets and proprietary information belonging to Ounce Labs. # None of the foregoing material may be copied, duplicated or disclosed # without the express written permission of Ounce Labs. #</description>
  </Header>
  <api_info>
    <class name="RecursiveTreeIterator">
      <method vuln_id="1088949">
        <simple_name>___Php.RecursiveTreeIterator.__call</simple_name>
        <signature>___Php.RecursiveTreeIterator.__call(mixed;mixed):mixed</signature>
        <propagates_taint dst_param="this" return="false" source_param="1,2"/>
      </method>
      <method vuln_id="1088701">
        <simple_name>___Php.RecursiveTreeIterator.__construct</simple_name>
        <signature>___Php.RecursiveTreeIterator.__construct(___Php.RecursiveIterator;int;int;int):void</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="2015972">
        <simple_name>___Php.RecursiveTreeIterator.beginChildren</simple_name>
        <signature>___Php.RecursiveTreeIterator.beginChildren():void</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="2015973">
        <simple_name>___Php.RecursiveTreeIterator.beginIteration</simple_name>
        <signature>___Php.RecursiveTreeIterator.beginIteration():___Php.RecursiveIterator</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="2015974">
        <simple_name>___Php.RecursiveTreeIterator.callGetChildren</simple_name>
        <signature>___Php.RecursiveTreeIterator.callGetChildren():___Php.RecursiveIterator</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="2015975">
        <simple_name>___Php.RecursiveTreeIterator.callHasChildren</simple_name>
        <signature>___Php.RecursiveTreeIterator.callHasChildren():bool</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="2015977">
        <simple_name>___Php.RecursiveTreeIterator.current</simple_name>
        <signature>___Php.RecursiveTreeIterator.current():___Php.String</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="1088786">
        <simple_name>___Php.RecursiveTreeIterator.current</simple_name>
        <signature>___Php.RecursiveTreeIterator.current():mixed</signature>
        <propagates_taint dst_param="none" return="true" source_param="this"/>
      </method>
      <method vuln_id="2015978">
        <simple_name>___Php.RecursiveTreeIterator.endChildren</simple_name>
        <signature>___Php.RecursiveTreeIterator.endChildren():void</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="2015979">
        <simple_name>___Php.RecursiveTreeIterator.endIteration</simple_name>
        <signature>___Php.RecursiveTreeIterator.endIteration():void</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="1088914">
        <simple_name>___Php.RecursiveTreeIterator.getEntry</simple_name>
        <signature>___Php.RecursiveTreeIterator.getEntry():___Php.String</signature>
        <propagates_taint dst_param="none" return="true" source_param="this"/>
      </method>
      <method vuln_id="1089014">
        <simple_name>___Php.RecursiveTreeIterator.getPostfix</simple_name>
        <signature>___Php.RecursiveTreeIterator.getPostfix():___Php.String</signature>
        <propagates_taint dst_param="none" return="true" source_param="this"/>
      </method>
      <method vuln_id="1088954">
        <simple_name>___Php.RecursiveTreeIterator.getPrefix</simple_name>
        <signature>___Php.RecursiveTreeIterator.getPrefix():___Php.String</signature>
        <propagates_taint dst_param="none" return="true" source_param="this"/>
      </method>
      <method vuln_id="2015982">
        <simple_name>___Php.RecursiveTreeIterator.key</simple_name>
        <signature>___Php.RecursiveTreeIterator.key():___Php.String</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="1088966">
        <simple_name>___Php.RecursiveTreeIterator.key</simple_name>
        <signature>___Php.RecursiveTreeIterator.key():mixed</signature>
        <propagates_taint dst_param="none" return="true" source_param="this"/>
      </method>
      <method vuln_id="2015983">
        <simple_name>___Php.RecursiveTreeIterator.next</simple_name>
        <signature>___Php.RecursiveTreeIterator.next():void</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="2015984">
        <simple_name>___Php.RecursiveTreeIterator.nextElement</simple_name>
        <signature>___Php.RecursiveTreeIterator.nextElement():void</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="2015985">
        <simple_name>___Php.RecursiveTreeIterator.rewind</simple_name>
        <signature>___Php.RecursiveTreeIterator.rewind():void</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="2015986">
        <simple_name>___Php.RecursiveTreeIterator.setPrefixPart</simple_name>
        <signature>___Php.RecursiveTreeIterator.setPrefixPart(int;___Php.String):void</signature>
        <propagates_taint dst_param="this" return="false" source_param="2"/>
      </method>
      <method vuln_id="2015987">
        <simple_name>___Php.RecursiveTreeIterator.valid</simple_name>
        <signature>___Php.RecursiveTreeIterator.valid():bool</signature>
        <does_not_propagate_taint/>
      </method>
    </class>
    <class name="RecursiveTreeIterator">
      <method vuln_id="1088949">
        <simple_name>___Php.RecursiveTreeIterator.__call</simple_name>
        <signature>___Php.RecursiveTreeIterator.__call(mixed;mixed):mixed</signature>
        <propagates_taint dst_param="this" return="false" source_param="1,2"/>
      </method>
      <method vuln_id="1088701">
        <simple_name>___Php.RecursiveTreeIterator.__construct</simple_name>
        <signature>___Php.RecursiveTreeIterator.__construct(___Php.RecursiveIterator;int;int;int):void</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="2015972">
        <simple_name>___Php.RecursiveTreeIterator.beginChildren</simple_name>
        <signature>___Php.RecursiveTreeIterator.beginChildren():void</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="2015973">
        <simple_name>___Php.RecursiveTreeIterator.beginIteration</simple_name>
        <signature>___Php.RecursiveTreeIterator.beginIteration():___Php.RecursiveIterator</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="2015974">
        <simple_name>___Php.RecursiveTreeIterator.callGetChildren</simple_name>
        <signature>___Php.RecursiveTreeIterator.callGetChildren():___Php.RecursiveIterator</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="2015975">
        <simple_name>___Php.RecursiveTreeIterator.callHasChildren</simple_name>
        <signature>___Php.RecursiveTreeIterator.callHasChildren():bool</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="2015977">
        <simple_name>___Php.RecursiveTreeIterator.current</simple_name>
        <signature>___Php.RecursiveTreeIterator.current():___Php.String</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="1088786">
        <simple_name>___Php.RecursiveTreeIterator.current</simple_name>
        <signature>___Php.RecursiveTreeIterator.current():mixed</signature>
        <propagates_taint dst_param="none" return="true" source_param="this"/>
      </method>
      <method vuln_id="2015978">
        <simple_name>___Php.RecursiveTreeIterator.endChildren</simple_name>
        <signature>___Php.RecursiveTreeIterator.endChildren():void</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="2015979">
        <simple_name>___Php.RecursiveTreeIterator.endIteration</simple_name>
        <signature>___Php.RecursiveTreeIterator.endIteration():void</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="1088914">
        <simple_name>___Php.RecursiveTreeIterator.getEntry</simple_name>
        <signature>___Php.RecursiveTreeIterator.getEntry():___Php.String</signature>
        <propagates_taint dst_param="none" return="true" source_param="this"/>
      </method>
      <method vuln_id="1089014">
        <simple_name>___Php.RecursiveTreeIterator.getPostfix</simple_name>
        <signature>___Php.RecursiveTreeIterator.getPostfix():___Php.String</signature>
        <propagates_taint dst_param="none" return="true" source_param="this"/>
      </method>
      <method vuln_id="1088954">
        <simple_name>___Php.RecursiveTreeIterator.getPrefix</simple_name>
        <signature>___Php.RecursiveTreeIterator.getPrefix():___Php.String</signature>
        <propagates_taint dst_param="none" return="true" source_param="this"/>
      </method>
      <method vuln_id="2015982">
        <simple_name>___Php.RecursiveTreeIterator.key</simple_name>
        <signature>___Php.RecursiveTreeIterator.key():___Php.String</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="1088966">
        <simple_name>___Php.RecursiveTreeIterator.key</simple_name>
        <signature>___Php.RecursiveTreeIterator.key():mixed</signature>
        <propagates_taint dst_param="none" return="true" source_param="this"/>
      </method>
      <method vuln_id="2015983">
        <simple_name>___Php.RecursiveTreeIterator.next</simple_name>
        <signature>___Php.RecursiveTreeIterator.next():void</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="2015984">
        <simple_name>___Php.RecursiveTreeIterator.nextElement</simple_name>
        <signature>___Php.RecursiveTreeIterator.nextElement():void</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="2015985">
        <simple_name>___Php.RecursiveTreeIterator.rewind</simple_name>
        <signature>___Php.RecursiveTreeIterator.rewind():void</signature>
        <does_not_propagate_taint/>
      </method>
      <method vuln_id="2015986">
        <simple_name>___Php.RecursiveTreeIterator.setPrefixPart</simple_name>
        <signature>___Php.RecursiveTreeIterator.setPrefixPart(int;___Php.String):void</signature>
        <propagates_taint dst_param="this" return="false" source_param="2"/>
      </method>
      <method vuln_id="2015987">
        <simple_name>___Php.RecursiveTreeIterator.valid</simple_name>
        <signature>___Php.RecursiveTreeIterator.valid():bool</signature>
        <does_not_propagate_taint/>
      </method>
    </class>
  </api_info>
</LanguageDependentDB>
