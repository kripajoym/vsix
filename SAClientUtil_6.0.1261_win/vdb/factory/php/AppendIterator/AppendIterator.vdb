<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<LanguageDependentDB>
  <Header language="php" version="3.0.0">
    <description># # Ounce Labs Confidential # # Copyright (c) 2003, 2004 Ounce Labs, Inc. All-Rights Reserved. # # &lt;a href="http://www.ouncelabs.com"&gt;Ounce Labs&lt;/a&gt; # # This software and documentation constitute an unpublished work and contains # valuable trade secrets and proprietary information belonging to Ounce Labs. # None of the foregoing material may be copied, duplicated or disclosed # without the express written permission of Ounce Labs. #</description>
  </Header>
  <api_info>
    <class name="AppendIterator">
      <method vuln_id="1088811">
        <simple_name>___Php.AppendIterator.__construct</simple_name>
        <signature>___Php.AppendIterator.__construct():void</signature>
        <comment>Create an AppendIterator</comment>
      </method>
      <method vuln_id="1088882">
        <simple_name>___Php.AppendIterator.append</simple_name>
        <signature>___Php.AppendIterator.append(___Php.AppendIterator):void</signature>
        <does_not_propagate_taint/>
        <comment>Append an iterator</comment>
      </method>
      <method vuln_id="1088836">
        <simple_name>___Php.AppendIterator.getArrayIterator</simple_name>
        <signature>___Php.AppendIterator.getArrayIterator():___Php.ArrayIterator</signature>
        <does_not_propagate_taint/>
        <comment>Get access to inner ArrayIterator</comment>
      </method>
      <method vuln_id="1089025">
        <simple_name>___Php.AppendIterator.getIteratorIndex</simple_name>
        <signature>___Php.AppendIterator.getIteratorIndex():int</signature>
        <does_not_propagate_taint/>
        <comment>Get index of iterator</comment>
      </method>
      <method vuln_id="1088682">
        <simple_name>___Php.AppendIterator.next</simple_name>
        <signature>___Php.AppendIterator.next():void</signature>
        <does_not_propagate_taint/>
        <comment>Forward to next element</comment>
      </method>
      <method vuln_id="1088927">
        <simple_name>___Php.AppendIterator.rewind</simple_name>
        <signature>___Php.AppendIterator.rewind():void</signature>
        <does_not_propagate_taint/>
        <comment>Rewind to the first iterator and rewind the first iterator,too</comment>
      </method>
      <method vuln_id="1088847">
        <simple_name>___Php.AppendIterator.valid</simple_name>
        <signature>___Php.AppendIterator.valid():bool</signature>
        <does_not_propagate_taint/>
        <comment>Check if the current state is valid</comment>
      </method>
    </class>
    <class name="AppendIterator">
      <method vuln_id="1088811">
        <simple_name>___Php.AppendIterator.__construct</simple_name>
        <signature>___Php.AppendIterator.__construct():void</signature>
        <comment>Create an AppendIterator</comment>
      </method>
      <method vuln_id="1088882">
        <simple_name>___Php.AppendIterator.append</simple_name>
        <signature>___Php.AppendIterator.append(___Php.AppendIterator):void</signature>
        <does_not_propagate_taint/>
        <comment>Append an iterator</comment>
      </method>
      <method vuln_id="1088836">
        <simple_name>___Php.AppendIterator.getArrayIterator</simple_name>
        <signature>___Php.AppendIterator.getArrayIterator():___Php.ArrayIterator</signature>
        <does_not_propagate_taint/>
        <comment>Get access to inner ArrayIterator</comment>
      </method>
      <method vuln_id="1089025">
        <simple_name>___Php.AppendIterator.getIteratorIndex</simple_name>
        <signature>___Php.AppendIterator.getIteratorIndex():int</signature>
        <does_not_propagate_taint/>
        <comment>Get index of iterator</comment>
      </method>
      <method vuln_id="1088682">
        <simple_name>___Php.AppendIterator.next</simple_name>
        <signature>___Php.AppendIterator.next():void</signature>
        <does_not_propagate_taint/>
        <comment>Forward to next element</comment>
      </method>
      <method vuln_id="1088927">
        <simple_name>___Php.AppendIterator.rewind</simple_name>
        <signature>___Php.AppendIterator.rewind():void</signature>
        <does_not_propagate_taint/>
        <comment>Rewind to the first iterator and rewind the first iterator,too</comment>
      </method>
      <method vuln_id="1088847">
        <simple_name>___Php.AppendIterator.valid</simple_name>
        <signature>___Php.AppendIterator.valid():bool</signature>
        <does_not_propagate_taint/>
        <comment>Check if the current state is valid</comment>
      </method>
    </class>
  </api_info>
</LanguageDependentDB>
