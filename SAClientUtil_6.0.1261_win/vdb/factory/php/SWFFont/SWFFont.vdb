<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<LanguageDependentDB>
  <Header language="php" version="3.0.0">
    <description># # Ounce Labs Confidential # # Copyright (c) 2003, 2004 Ounce Labs, Inc. All-Rights Reserved. # # &lt;a href="http://www.ouncelabs.com"&gt;Ounce Labs&lt;/a&gt; # # This software and documentation constitute an unpublished work and contains # valuable trade secrets and proprietary information belonging to Ounce Labs. # None of the foregoing material may be copied, duplicated or disclosed # without the express written permission of Ounce Labs. #</description>
  </Header>
  <api_info>
    <class name="SWFFont">
      <method vuln_id="1087379">
        <simple_name>___Php.SWFFont.__construct</simple_name>
        <signature>___Php.SWFFont.__construct(___Php.String):void</signature>
        <info_rule id="454488"/>
        <property>Technology.Media.Flash</property>
        <comment>Creates a new SWFFont object from given file</comment>
      </method>
      <method vuln_id="1087473">
        <simple_name>___Php.SWFFont.addChars</simple_name>
        <signature>___Php.SWFFont.addChars(___Php.String):void</signature>
        <info_rule id="454586"/>
        <propagates_taint dst_param="this" return="false" source_param="1"/>
        <property>Technology.Media.Flash</property>
        <comment>adds characters to a font required within textfields</comment>
      </method>
      <method vuln_id="1087429">
        <simple_name>___Php.SWFFont.getAscent</simple_name>
        <signature>___Php.SWFFont.getAscent():float</signature>
        <info_rule id="454541"/>
        <propagates_taint dst_param="none" return="true" source_param="this"/>
        <property>Technology.Media.Flash</property>
        <comment>Returns the ascent of the font,or 0 if not available</comment>
      </method>
      <method vuln_id="1087497">
        <simple_name>___Php.SWFFont.getDescent</simple_name>
        <signature>___Php.SWFFont.getDescent():float</signature>
        <info_rule id="454613"/>
        <propagates_taint dst_param="none" return="true" source_param="this"/>
        <property>Technology.Media.Flash</property>
        <comment>Returns the descent of the font,or 0 if not available</comment>
      </method>
      <method vuln_id="1087405">
        <simple_name>___Php.SWFFont.getLeading</simple_name>
        <signature>___Php.SWFFont.getLeading():float</signature>
        <info_rule id="454515"/>
        <propagates_taint dst_param="none" return="true" source_param="this"/>
        <property>Technology.Media.Flash</property>
        <comment>Returns the leading of the font,or 0 if not available</comment>
      </method>
      <method vuln_id="1087394">
        <simple_name>___Php.SWFFont.getShape</simple_name>
        <signature>___Php.SWFFont.getShape(int):___Php.String</signature>
        <info_rule id="454503"/>
        <propagates_taint dst_param="none" return="true" source_param="this"/>
        <property>Technology.Media.Flash</property>
        <comment>Returns the glyph shape of a char as a text string</comment>
      </method>
      <method vuln_id="1087435">
        <simple_name>___Php.SWFFont.getUTF8Width</simple_name>
        <signature>___Php.SWFFont.getUTF8Width(___Php.String):float</signature>
        <info_rule id="454547"/>
        <does_not_propagate_taint/>
        <property>Technology.Media.Flash</property>
        <comment>Calculates the width of the given string in this font at full height</comment>
      </method>
      <method vuln_id="1087472">
        <simple_name>___Php.SWFFont.getWideWidth</simple_name>
        <signature>___Php.SWFFont.getWideWidth(___Php.String):float</signature>
        <info_rule id="454585"/>
        <does_not_propagate_taint/>
        <property>Technology.Media.Flash</property>
        <comment>Calculates the width of the given string in this font at full height</comment>
      </method>
      <method vuln_id="1087533">
        <simple_name>___Php.SWFFont.getWidth</simple_name>
        <signature>___Php.SWFFont.getWidth(___Php.String):float</signature>
        <info_rule id="454650"/>
        <does_not_propagate_taint/>
        <property>Technology.Media.Flash</property>
        <comment>Calculates the width of the given string in this font at full height</comment>
      </method>
    </class>
    <class name="SWFFont">
      <method vuln_id="1087379">
        <simple_name>___Php.SWFFont.__construct</simple_name>
        <signature>___Php.SWFFont.__construct(___Php.String):void</signature>
        <info_rule id="454488"/>
        <property>Technology.Media.Flash</property>
        <comment>Creates a new SWFFont object from given file</comment>
      </method>
      <method vuln_id="1087473">
        <simple_name>___Php.SWFFont.addChars</simple_name>
        <signature>___Php.SWFFont.addChars(___Php.String):void</signature>
        <info_rule id="454586"/>
        <propagates_taint dst_param="this" return="false" source_param="1"/>
        <property>Technology.Media.Flash</property>
        <comment>adds characters to a font required within textfields</comment>
      </method>
      <method vuln_id="1087429">
        <simple_name>___Php.SWFFont.getAscent</simple_name>
        <signature>___Php.SWFFont.getAscent():float</signature>
        <info_rule id="454541"/>
        <propagates_taint dst_param="none" return="true" source_param="this"/>
        <property>Technology.Media.Flash</property>
        <comment>Returns the ascent of the font,or 0 if not available</comment>
      </method>
      <method vuln_id="1087497">
        <simple_name>___Php.SWFFont.getDescent</simple_name>
        <signature>___Php.SWFFont.getDescent():float</signature>
        <info_rule id="454613"/>
        <propagates_taint dst_param="none" return="true" source_param="this"/>
        <property>Technology.Media.Flash</property>
        <comment>Returns the descent of the font,or 0 if not available</comment>
      </method>
      <method vuln_id="1087405">
        <simple_name>___Php.SWFFont.getLeading</simple_name>
        <signature>___Php.SWFFont.getLeading():float</signature>
        <info_rule id="454515"/>
        <propagates_taint dst_param="none" return="true" source_param="this"/>
        <property>Technology.Media.Flash</property>
        <comment>Returns the leading of the font,or 0 if not available</comment>
      </method>
      <method vuln_id="1087394">
        <simple_name>___Php.SWFFont.getShape</simple_name>
        <signature>___Php.SWFFont.getShape(int):___Php.String</signature>
        <info_rule id="454503"/>
        <propagates_taint dst_param="none" return="true" source_param="this"/>
        <property>Technology.Media.Flash</property>
        <comment>Returns the glyph shape of a char as a text string</comment>
      </method>
      <method vuln_id="1087435">
        <simple_name>___Php.SWFFont.getUTF8Width</simple_name>
        <signature>___Php.SWFFont.getUTF8Width(___Php.String):float</signature>
        <info_rule id="454547"/>
        <does_not_propagate_taint/>
        <property>Technology.Media.Flash</property>
        <comment>Calculates the width of the given string in this font at full height</comment>
      </method>
      <method vuln_id="1087472">
        <simple_name>___Php.SWFFont.getWideWidth</simple_name>
        <signature>___Php.SWFFont.getWideWidth(___Php.String):float</signature>
        <info_rule id="454585"/>
        <does_not_propagate_taint/>
        <property>Technology.Media.Flash</property>
        <comment>Calculates the width of the given string in this font at full height</comment>
      </method>
      <method vuln_id="1087533">
        <simple_name>___Php.SWFFont.getWidth</simple_name>
        <signature>___Php.SWFFont.getWidth(___Php.String):float</signature>
        <info_rule id="454650"/>
        <does_not_propagate_taint/>
        <property>Technology.Media.Flash</property>
        <comment>Calculates the width of the given string in this font at full height</comment>
      </method>
    </class>
  </api_info>
</LanguageDependentDB>
